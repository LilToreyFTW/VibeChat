{"ast":null,"code":"import React,{useState}from'react';import{BrowserRouter as Router,Routes,Route,Navigate}from'react-router-dom';import{ThemeProvider,createTheme}from'@mui/material/styles';import CssBaseline from'@mui/material/CssBaseline';import{Box,useMediaQuery}from'@mui/material';// Discord-like Layout Components\nimport LeftSidebar from'./components/discord/LeftSidebar';import CentralPane from'./components/discord/CentralPane';import RightSidebar from'./components/discord/RightSidebar';import TopBar from'./components/discord/TopBar';import BottomBar from'./components/discord/BottomBar';import UserSettingsModal from'./components/discord/UserSettingsModal';// Auth Components (keeping existing)\nimport LoginPage from'./components/auth/LoginPage';import RegisterPage from'./components/auth/RegisterPage';import EmailVerificationPage from'./components/auth/EmailVerificationPage';// Hooks and Stores\nimport{useAuthStore}from'./store/authStore';// Create Discord-like dark theme\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const theme=createTheme({palette:{mode:'dark',primary:{main:'#5865f2'// Discord blurple\n},secondary:{main:'#57f287'// Discord green\n},background:{default:'#313338',// Discord dark background\npaper:'#2b2d31'},text:{primary:'#dbdee1',secondary:'#b5bac1'}},typography:{fontFamily:'\"Whitney\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif'},shape:{borderRadius:8},components:{MuiCssBaseline:{styleOverrides:{body:{scrollbarColor:'#202225 #2f3136','&::-webkit-scrollbar':{width:'8px'},'&::-webkit-scrollbar-track':{background:'#2f3136'},'&::-webkit-scrollbar-thumb':{background:'#202225',borderRadius:'4px'},'&::-webkit-scrollbar-thumb:hover':{background:'#1a1b1e'}}}}}});// Protected Route Component\nconst ProtectedRoute=_ref=>{let{children}=_ref;const{isAuthenticated}=useAuthStore();if(!isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}return/*#__PURE__*/_jsx(_Fragment,{children:children});};// Public Route Component (redirect to main app if already authenticated)\nconst PublicRoute=_ref2=>{let{children}=_ref2;const{isAuthenticated}=useAuthStore();if(isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true});}return/*#__PURE__*/_jsx(_Fragment,{children:children});};// Main Discord Layout Component\nconst DiscordLayout=_ref3=>{let{children}=_ref3;const[selectedServer,setSelectedServer]=useState('home');const[selectedChannel,setSelectedChannel]=useState('general');const[settingsOpen,setSettingsOpen]=useState(false);const[rightSidebarOpen,setRightSidebarOpen]=useState(true);const isMobile=useMediaQuery(theme.breakpoints.down('md'));return/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',height:'100vh',backgroundColor:'background.default',overflow:'hidden'},children:[/*#__PURE__*/_jsx(TopBar,{onSettingsClick:()=>setSettingsOpen(true)}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flex:1,overflow:'hidden'},children:[/*#__PURE__*/_jsx(LeftSidebar,{selectedServer:selectedServer,onServerSelect:setSelectedServer}),/*#__PURE__*/_jsx(CentralPane,{selectedServer:selectedServer,selectedChannel:selectedChannel,onChannelSelect:setSelectedChannel,onToggleRightSidebar:()=>setRightSidebarOpen(!rightSidebarOpen)}),!isMobile&&rightSidebarOpen&&/*#__PURE__*/_jsx(RightSidebar,{selectedServer:selectedServer,selectedChannel:selectedChannel})]}),/*#__PURE__*/_jsx(BottomBar,{selectedChannel:selectedChannel}),/*#__PURE__*/_jsx(UserSettingsModal,{open:settingsOpen,onClose:()=>setSettingsOpen(false)}),children]});};function App(){return/*#__PURE__*/_jsxs(ThemeProvider,{theme:theme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{className:\"App\",style:{height:'100vh'},children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(PublicRoute,{children:/*#__PURE__*/_jsx(LoginPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(PublicRoute,{children:/*#__PURE__*/_jsx(RegisterPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/verify-email\",element:/*#__PURE__*/_jsx(EmailVerificationPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/*\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(DiscordLayout,{})})})]})})})]});}export default App;","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","ThemeProvider","createTheme","CssBaseline","Box","useMediaQuery","LeftSidebar","CentralPane","RightSidebar","TopBar","BottomBar","UserSettingsModal","LoginPage","RegisterPage","EmailVerificationPage","useAuthStore","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","theme","palette","mode","primary","main","secondary","background","default","paper","text","typography","fontFamily","shape","borderRadius","components","MuiCssBaseline","styleOverrides","body","scrollbarColor","width","ProtectedRoute","_ref","children","isAuthenticated","to","replace","PublicRoute","_ref2","DiscordLayout","_ref3","selectedServer","setSelectedServer","selectedChannel","setSelectedChannel","settingsOpen","setSettingsOpen","rightSidebarOpen","setRightSidebarOpen","isMobile","breakpoints","down","sx","display","flexDirection","height","backgroundColor","overflow","onSettingsClick","flex","onServerSelect","onChannelSelect","onToggleRightSidebar","open","onClose","App","className","style","path","element"],"sources":["I:/VibeChat/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { Box, useMediaQuery } from '@mui/material';\r\n\r\n// Discord-like Layout Components\r\nimport LeftSidebar from './components/discord/LeftSidebar';\r\nimport CentralPane from './components/discord/CentralPane';\r\nimport RightSidebar from './components/discord/RightSidebar';\r\nimport TopBar from './components/discord/TopBar';\r\nimport BottomBar from './components/discord/BottomBar';\r\nimport UserSettingsModal from './components/discord/UserSettingsModal';\r\n\r\n// Auth Components (keeping existing)\r\nimport LoginPage from './components/auth/LoginPage';\r\nimport RegisterPage from './components/auth/RegisterPage';\r\nimport EmailVerificationPage from './components/auth/EmailVerificationPage';\r\n\r\n// Hooks and Stores\r\nimport { useAuthStore } from './store/authStore';\r\n\r\n// Create Discord-like dark theme\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n    primary: {\r\n      main: '#5865f2', // Discord blurple\r\n    },\r\n    secondary: {\r\n      main: '#57f287', // Discord green\r\n    },\r\n    background: {\r\n      default: '#313338', // Discord dark background\r\n      paper: '#2b2d31',\r\n    },\r\n    text: {\r\n      primary: '#dbdee1',\r\n      secondary: '#b5bac1',\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: '\"Whitney\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif',\r\n  },\r\n  shape: {\r\n    borderRadius: 8,\r\n  },\r\n  components: {\r\n    MuiCssBaseline: {\r\n      styleOverrides: {\r\n        body: {\r\n          scrollbarColor: '#202225 #2f3136',\r\n          '&::-webkit-scrollbar': {\r\n            width: '8px',\r\n          },\r\n          '&::-webkit-scrollbar-track': {\r\n            background: '#2f3136',\r\n          },\r\n          '&::-webkit-scrollbar-thumb': {\r\n            background: '#202225',\r\n            borderRadius: '4px',\r\n          },\r\n          '&::-webkit-scrollbar-thumb:hover': {\r\n            background: '#1a1b1e',\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\n// Protected Route Component\r\nconst ProtectedRoute: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const { isAuthenticated } = useAuthStore();\r\n\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\n// Public Route Component (redirect to main app if already authenticated)\r\nconst PublicRoute: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const { isAuthenticated } = useAuthStore();\r\n\r\n  if (isAuthenticated) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\n// Main Discord Layout Component\r\nconst DiscordLayout: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\r\n  const [selectedServer, setSelectedServer] = useState<string>('home');\r\n  const [selectedChannel, setSelectedChannel] = useState<string>('general');\r\n  const [settingsOpen, setSettingsOpen] = useState(false);\r\n  const [rightSidebarOpen, setRightSidebarOpen] = useState(true);\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  return (\r\n    <Box sx={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      height: '100vh',\r\n      backgroundColor: 'background.default',\r\n      overflow: 'hidden'\r\n    }}>\r\n      {/* Top Bar */}\r\n      <TopBar onSettingsClick={() => setSettingsOpen(true)} />\r\n\r\n      {/* Main Content Area */}\r\n      <Box sx={{\r\n        display: 'flex',\r\n        flex: 1,\r\n        overflow: 'hidden'\r\n      }}>\r\n        {/* Left Sidebar - Server/Guild Hub */}\r\n        <LeftSidebar\r\n          selectedServer={selectedServer}\r\n          onServerSelect={setSelectedServer}\r\n        />\r\n\r\n        {/* Central Pane - Content Area */}\r\n        <CentralPane\r\n          selectedServer={selectedServer}\r\n          selectedChannel={selectedChannel}\r\n          onChannelSelect={setSelectedChannel}\r\n          onToggleRightSidebar={() => setRightSidebarOpen(!rightSidebarOpen)}\r\n        />\r\n\r\n        {/* Right Sidebar - Members & Activity */}\r\n        {!isMobile && rightSidebarOpen && (\r\n          <RightSidebar\r\n            selectedServer={selectedServer}\r\n            selectedChannel={selectedChannel}\r\n          />\r\n        )}\r\n      </Box>\r\n\r\n      {/* Bottom Bar - Input & Controls */}\r\n      <BottomBar selectedChannel={selectedChannel} />\r\n\r\n      {/* User Settings Modal */}\r\n      <UserSettingsModal\r\n        open={settingsOpen}\r\n        onClose={() => setSettingsOpen(false)}\r\n      />\r\n\r\n      {/* Mobile Navigation Overlay would go here */}\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Router>\r\n        <div className=\"App\" style={{ height: '100vh' }}>\r\n          <Routes>\r\n            {/* Public Routes */}\r\n            <Route\r\n              path=\"/login\"\r\n              element={\r\n                <PublicRoute>\r\n                  <LoginPage />\r\n                </PublicRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/register\"\r\n              element={\r\n                <PublicRoute>\r\n                  <RegisterPage />\r\n                </PublicRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/verify-email\"\r\n              element={<EmailVerificationPage />}\r\n            />\r\n\r\n            {/* Main Discord Interface */}\r\n            <Route\r\n              path=\"/*\"\r\n              element={\r\n                <ProtectedRoute>\r\n                  <DiscordLayout />\r\n                </ProtectedRoute>\r\n              }\r\n            />\r\n          </Routes>\r\n        </div>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}