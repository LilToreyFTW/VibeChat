{"ast":null,"code":"import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport apiService from '../services/api';\nexport const useAuthStore = create()(persist((set, get) => ({\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n  login: async data => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await apiService.login(data);\n      if (response.success && response.data) {\n        const {\n          accessToken,\n          user\n        } = response.data;\n        set({\n          user,\n          token: accessToken,\n          isAuthenticated: true,\n          isLoading: false,\n          error: null\n        });\n\n        // Store token and username in localStorage for API interceptor\n        localStorage.setItem('authToken', accessToken);\n        localStorage.setItem('username', user.username);\n      } else {\n        set({\n          user: null,\n          token: null,\n          isAuthenticated: false,\n          isLoading: false,\n          error: response.message || 'Login failed'\n        });\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      set({\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n      });\n    }\n  },\n  register: async data => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await apiService.register(data);\n      if (response.success && response.data) {\n        set({\n          user: response.data,\n          isAuthenticated: false,\n          // Need to login after registration\n          isLoading: false,\n          error: null\n        });\n      } else {\n        set({\n          user: null,\n          isAuthenticated: false,\n          isLoading: false,\n          error: response.message || 'Registration failed'\n        });\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      set({\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed'\n      });\n    }\n  },\n  logout: () => {\n    set({\n      user: null,\n      token: null,\n      isAuthenticated: false,\n      error: null\n    });\n\n    // Clear localStorage\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('username');\n  },\n  clearError: () => {\n    set({\n      error: null\n    });\n  },\n  setLoading: loading => {\n    set({\n      isLoading: loading\n    });\n  }\n}), {\n  name: 'auth-storage',\n  partialize: state => ({\n    user: state.user,\n    token: state.token,\n    isAuthenticated: state.isAuthenticated\n  })\n}));","map":{"version":3,"names":["create","persist","apiService","useAuthStore","set","get","user","token","isAuthenticated","isLoading","error","login","data","response","success","accessToken","localStorage","setItem","username","message","_error$response","_error$response$data","register","_error$response2","_error$response2$data","logout","removeItem","clearError","setLoading","loading","name","partialize","state"],"sources":["I:/VibeChat/EntireProjectNeedsTobeCompiled/frontend/src/store/authStore.ts"],"sourcesContent":["import { create } from 'zustand';\r\nimport { persist } from 'zustand/middleware';\r\nimport { User, AuthResponse, LoginRequest, RegisterRequest } from '../types';\r\nimport apiService from '../services/api';\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  token: string | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n\r\n  // Actions\r\n  login: (data: LoginRequest) => Promise<void>;\r\n  register: (data: RegisterRequest) => Promise<void>;\r\n  logout: () => void;\r\n  clearError: () => void;\r\n  setLoading: (loading: boolean) => void;\r\n}\r\n\r\nexport const useAuthStore = create<AuthState>()(\r\n  persist(\r\n    (set, get) => ({\r\n      user: null,\r\n      token: null,\r\n      isAuthenticated: false,\r\n      isLoading: false,\r\n      error: null,\r\n\r\n      login: async (data: LoginRequest) => {\r\n        set({ isLoading: true, error: null });\r\n\r\n        try {\r\n          const response = await apiService.login(data);\r\n\r\n          if (response.success && response.data) {\r\n            const { accessToken, user } = response.data;\r\n\r\n            set({\r\n              user,\r\n              token: accessToken,\r\n              isAuthenticated: true,\r\n              isLoading: false,\r\n              error: null,\r\n            });\r\n\r\n            // Store token and username in localStorage for API interceptor\r\n            localStorage.setItem('authToken', accessToken);\r\n            localStorage.setItem('username', user.username);\r\n          } else {\r\n            set({\r\n              user: null,\r\n              token: null,\r\n              isAuthenticated: false,\r\n              isLoading: false,\r\n              error: response.message || 'Login failed',\r\n            });\r\n          }\r\n        } catch (error: any) {\r\n          set({\r\n            user: null,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            isLoading: false,\r\n            error: error.response?.data?.message || 'Login failed',\r\n          });\r\n        }\r\n      },\r\n\r\n      register: async (data: RegisterRequest) => {\r\n        set({ isLoading: true, error: null });\r\n\r\n        try {\r\n          const response = await apiService.register(data);\r\n\r\n          if (response.success && response.data) {\r\n            set({\r\n              user: response.data,\r\n              isAuthenticated: false, // Need to login after registration\r\n              isLoading: false,\r\n              error: null,\r\n            });\r\n          } else {\r\n            set({\r\n              user: null,\r\n              isAuthenticated: false,\r\n              isLoading: false,\r\n              error: response.message || 'Registration failed',\r\n            });\r\n          }\r\n        } catch (error: any) {\r\n          set({\r\n            user: null,\r\n            isAuthenticated: false,\r\n            isLoading: false,\r\n            error: error.response?.data?.message || 'Registration failed',\r\n          });\r\n        }\r\n      },\r\n\r\n      logout: () => {\r\n        set({\r\n          user: null,\r\n          token: null,\r\n          isAuthenticated: false,\r\n          error: null,\r\n        });\r\n\r\n        // Clear localStorage\r\n        localStorage.removeItem('authToken');\r\n        localStorage.removeItem('username');\r\n      },\r\n\r\n      clearError: () => {\r\n        set({ error: null });\r\n      },\r\n\r\n      setLoading: (loading: boolean) => {\r\n        set({ isLoading: loading });\r\n      },\r\n    }),\r\n    {\r\n      name: 'auth-storage',\r\n      partialize: (state) => ({\r\n        user: state.user,\r\n        token: state.token,\r\n        isAuthenticated: state.isAuthenticated,\r\n      }),\r\n    }\r\n  )\r\n);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}