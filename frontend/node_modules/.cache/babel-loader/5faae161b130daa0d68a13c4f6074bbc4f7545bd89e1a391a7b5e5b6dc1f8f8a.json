{"ast":null,"code":"import{create}from'zustand';import{persist}from'zustand/middleware';import apiService from'../services/api';export const useAuthStore=create()(persist((set,get)=>({user:null,token:null,isAuthenticated:false,isLoading:false,error:null,login:async data=>{set({isLoading:true,error:null});try{const response=await apiService.login(data);if(response.success&&response.data){const{accessToken,user}=response.data;set({user,token:accessToken,isAuthenticated:true,isLoading:false,error:null});// Store token and username in localStorage for API interceptor\nlocalStorage.setItem('authToken',accessToken);localStorage.setItem('username',user.username);}else{set({user:null,token:null,isAuthenticated:false,isLoading:false,error:response.message||'Login failed'});}}catch(error){var _error$response,_error$response$data;set({user:null,token:null,isAuthenticated:false,isLoading:false,error:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Login failed'});}},register:async data=>{set({isLoading:true,error:null});try{const response=await apiService.register(data);if(response.success&&response.data){set({user:response.data,isAuthenticated:false,// Need to login after registration\nisLoading:false,error:null});}else{set({user:null,isAuthenticated:false,isLoading:false,error:response.message||'Registration failed'});}}catch(error){var _error$response2,_error$response2$data;set({user:null,isAuthenticated:false,isLoading:false,error:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Registration failed'});}},logout:()=>{set({user:null,token:null,isAuthenticated:false,error:null});// Clear localStorage\nlocalStorage.removeItem('authToken');localStorage.removeItem('username');},clearError:()=>{set({error:null});},setLoading:loading=>{set({isLoading:loading});}}),{name:'auth-storage',partialize:state=>({user:state.user,token:state.token,isAuthenticated:state.isAuthenticated})}));","map":{"version":3,"names":["create","persist","apiService","useAuthStore","set","get","user","token","isAuthenticated","isLoading","error","login","data","response","success","accessToken","localStorage","setItem","username","message","_error$response","_error$response$data","register","_error$response2","_error$response2$data","logout","removeItem","clearError","setLoading","loading","name","partialize","state"],"sources":["I:/VibeChat/frontend/src/store/authStore.ts"],"sourcesContent":["import { create } from 'zustand';\r\nimport { persist } from 'zustand/middleware';\r\nimport { User, AuthResponse, LoginRequest, RegisterRequest } from '../types';\r\nimport apiService from '../services/api';\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  token: string | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n\r\n  // Actions\r\n  login: (data: LoginRequest) => Promise<void>;\r\n  register: (data: RegisterRequest) => Promise<void>;\r\n  logout: () => void;\r\n  clearError: () => void;\r\n  setLoading: (loading: boolean) => void;\r\n}\r\n\r\nexport const useAuthStore = create<AuthState>()(\r\n  persist(\r\n    (set, get) => ({\r\n      user: null,\r\n      token: null,\r\n      isAuthenticated: false,\r\n      isLoading: false,\r\n      error: null,\r\n\r\n      login: async (data: LoginRequest) => {\r\n        set({ isLoading: true, error: null });\r\n\r\n        try {\r\n          const response = await apiService.login(data);\r\n\r\n          if (response.success && response.data) {\r\n            const { accessToken, user } = response.data;\r\n\r\n            set({\r\n              user,\r\n              token: accessToken,\r\n              isAuthenticated: true,\r\n              isLoading: false,\r\n              error: null,\r\n            });\r\n\r\n            // Store token and username in localStorage for API interceptor\r\n            localStorage.setItem('authToken', accessToken);\r\n            localStorage.setItem('username', user.username);\r\n          } else {\r\n            set({\r\n              user: null,\r\n              token: null,\r\n              isAuthenticated: false,\r\n              isLoading: false,\r\n              error: response.message || 'Login failed',\r\n            });\r\n          }\r\n        } catch (error: any) {\r\n          set({\r\n            user: null,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            isLoading: false,\r\n            error: error.response?.data?.message || 'Login failed',\r\n          });\r\n        }\r\n      },\r\n\r\n      register: async (data: RegisterRequest) => {\r\n        set({ isLoading: true, error: null });\r\n\r\n        try {\r\n          const response = await apiService.register(data);\r\n\r\n          if (response.success && response.data) {\r\n            set({\r\n              user: response.data,\r\n              isAuthenticated: false, // Need to login after registration\r\n              isLoading: false,\r\n              error: null,\r\n            });\r\n          } else {\r\n            set({\r\n              user: null,\r\n              isAuthenticated: false,\r\n              isLoading: false,\r\n              error: response.message || 'Registration failed',\r\n            });\r\n          }\r\n        } catch (error: any) {\r\n          set({\r\n            user: null,\r\n            isAuthenticated: false,\r\n            isLoading: false,\r\n            error: error.response?.data?.message || 'Registration failed',\r\n          });\r\n        }\r\n      },\r\n\r\n      logout: () => {\r\n        set({\r\n          user: null,\r\n          token: null,\r\n          isAuthenticated: false,\r\n          error: null,\r\n        });\r\n\r\n        // Clear localStorage\r\n        localStorage.removeItem('authToken');\r\n        localStorage.removeItem('username');\r\n      },\r\n\r\n      clearError: () => {\r\n        set({ error: null });\r\n      },\r\n\r\n      setLoading: (loading: boolean) => {\r\n        set({ isLoading: loading });\r\n      },\r\n    }),\r\n    {\r\n      name: 'auth-storage',\r\n      partialize: (state) => ({\r\n        user: state.user,\r\n        token: state.token,\r\n        isAuthenticated: state.isAuthenticated,\r\n      }),\r\n    }\r\n  )\r\n);\r\n"],"mappings":"AAAA,OAASA,MAAM,KAAQ,SAAS,CAChC,OAASC,OAAO,KAAQ,oBAAoB,CAE5C,MAAO,CAAAC,UAAU,KAAM,iBAAiB,CAiBxC,MAAO,MAAM,CAAAC,YAAY,CAAGH,MAAM,CAAY,CAAC,CAC7CC,OAAO,CACL,CAACG,GAAG,CAAEC,GAAG,IAAM,CACbC,IAAI,CAAE,IAAI,CACVC,KAAK,CAAE,IAAI,CACXC,eAAe,CAAE,KAAK,CACtBC,SAAS,CAAE,KAAK,CAChBC,KAAK,CAAE,IAAI,CAEXC,KAAK,CAAE,KAAO,CAAAC,IAAkB,EAAK,CACnCR,GAAG,CAAC,CAAEK,SAAS,CAAE,IAAI,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CAErC,GAAI,CACF,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAX,UAAU,CAACS,KAAK,CAACC,IAAI,CAAC,CAE7C,GAAIC,QAAQ,CAACC,OAAO,EAAID,QAAQ,CAACD,IAAI,CAAE,CACrC,KAAM,CAAEG,WAAW,CAAET,IAAK,CAAC,CAAGO,QAAQ,CAACD,IAAI,CAE3CR,GAAG,CAAC,CACFE,IAAI,CACJC,KAAK,CAAEQ,WAAW,CAClBP,eAAe,CAAE,IAAI,CACrBC,SAAS,CAAE,KAAK,CAChBC,KAAK,CAAE,IACT,CAAC,CAAC,CAEF;AACAM,YAAY,CAACC,OAAO,CAAC,WAAW,CAAEF,WAAW,CAAC,CAC9CC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAEX,IAAI,CAACY,QAAQ,CAAC,CACjD,CAAC,IAAM,CACLd,GAAG,CAAC,CACFE,IAAI,CAAE,IAAI,CACVC,KAAK,CAAE,IAAI,CACXC,eAAe,CAAE,KAAK,CACtBC,SAAS,CAAE,KAAK,CAChBC,KAAK,CAAEG,QAAQ,CAACM,OAAO,EAAI,cAC7B,CAAC,CAAC,CACJ,CACF,CAAE,MAAOT,KAAU,CAAE,KAAAU,eAAA,CAAAC,oBAAA,CACnBjB,GAAG,CAAC,CACFE,IAAI,CAAE,IAAI,CACVC,KAAK,CAAE,IAAI,CACXC,eAAe,CAAE,KAAK,CACtBC,SAAS,CAAE,KAAK,CAChBC,KAAK,CAAE,EAAAU,eAAA,CAAAV,KAAK,CAACG,QAAQ,UAAAO,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBR,IAAI,UAAAS,oBAAA,iBAApBA,oBAAA,CAAsBF,OAAO,GAAI,cAC1C,CAAC,CAAC,CACJ,CACF,CAAC,CAEDG,QAAQ,CAAE,KAAO,CAAAV,IAAqB,EAAK,CACzCR,GAAG,CAAC,CAAEK,SAAS,CAAE,IAAI,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CAErC,GAAI,CACF,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAX,UAAU,CAACoB,QAAQ,CAACV,IAAI,CAAC,CAEhD,GAAIC,QAAQ,CAACC,OAAO,EAAID,QAAQ,CAACD,IAAI,CAAE,CACrCR,GAAG,CAAC,CACFE,IAAI,CAAEO,QAAQ,CAACD,IAAI,CACnBJ,eAAe,CAAE,KAAK,CAAE;AACxBC,SAAS,CAAE,KAAK,CAChBC,KAAK,CAAE,IACT,CAAC,CAAC,CACJ,CAAC,IAAM,CACLN,GAAG,CAAC,CACFE,IAAI,CAAE,IAAI,CACVE,eAAe,CAAE,KAAK,CACtBC,SAAS,CAAE,KAAK,CAChBC,KAAK,CAAEG,QAAQ,CAACM,OAAO,EAAI,qBAC7B,CAAC,CAAC,CACJ,CACF,CAAE,MAAOT,KAAU,CAAE,KAAAa,gBAAA,CAAAC,qBAAA,CACnBpB,GAAG,CAAC,CACFE,IAAI,CAAE,IAAI,CACVE,eAAe,CAAE,KAAK,CACtBC,SAAS,CAAE,KAAK,CAChBC,KAAK,CAAE,EAAAa,gBAAA,CAAAb,KAAK,CAACG,QAAQ,UAAAU,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBX,IAAI,UAAAY,qBAAA,iBAApBA,qBAAA,CAAsBL,OAAO,GAAI,qBAC1C,CAAC,CAAC,CACJ,CACF,CAAC,CAEDM,MAAM,CAAEA,CAAA,GAAM,CACZrB,GAAG,CAAC,CACFE,IAAI,CAAE,IAAI,CACVC,KAAK,CAAE,IAAI,CACXC,eAAe,CAAE,KAAK,CACtBE,KAAK,CAAE,IACT,CAAC,CAAC,CAEF;AACAM,YAAY,CAACU,UAAU,CAAC,WAAW,CAAC,CACpCV,YAAY,CAACU,UAAU,CAAC,UAAU,CAAC,CACrC,CAAC,CAEDC,UAAU,CAAEA,CAAA,GAAM,CAChBvB,GAAG,CAAC,CAAEM,KAAK,CAAE,IAAK,CAAC,CAAC,CACtB,CAAC,CAEDkB,UAAU,CAAGC,OAAgB,EAAK,CAChCzB,GAAG,CAAC,CAAEK,SAAS,CAAEoB,OAAQ,CAAC,CAAC,CAC7B,CACF,CAAC,CAAC,CACF,CACEC,IAAI,CAAE,cAAc,CACpBC,UAAU,CAAGC,KAAK,GAAM,CACtB1B,IAAI,CAAE0B,KAAK,CAAC1B,IAAI,CAChBC,KAAK,CAAEyB,KAAK,CAACzB,KAAK,CAClBC,eAAe,CAAEwB,KAAK,CAACxB,eACzB,CAAC,CACH,CACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}