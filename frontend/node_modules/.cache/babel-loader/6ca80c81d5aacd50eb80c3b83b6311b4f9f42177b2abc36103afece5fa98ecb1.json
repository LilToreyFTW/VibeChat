{"ast":null,"code":"import React,{useState}from'react';import{Box,TextField,IconButton,Tooltip,Typography,useTheme}from'@mui/material';import{Add as AddIcon,EmojiEmotions as EmojiIcon,Gif as GifIcon,Mic as MicIcon,Send as SendIcon}from'@mui/icons-material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BottomBar=_ref=>{let{selectedChannel}=_ref;const theme=useTheme();const[message,setMessage]=useState('');const[isTyping,setIsTyping]=useState(false);const handleSendMessage=()=>{if(message.trim()){// In real app, this would send the message via WebSocket/API\nconsole.log('Sending message:',message);setMessage('');}};const handleKeyPress=e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();handleSendMessage();}};return/*#__PURE__*/_jsxs(Box,{sx:{backgroundColor:'background.paper',borderTop:\"1px solid \".concat(theme.palette.divider),p:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'flex-end',gap:1,backgroundColor:'background.default',borderRadius:'8px',p:1},children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Add Attachment\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",sx:{color:'text.secondary','&:hover':{backgroundColor:'rgba(255, 255, 255, 0.05)',color:'text.primary'}},children:/*#__PURE__*/_jsx(AddIcon,{fontSize:\"small\"})})}),/*#__PURE__*/_jsx(TextField,{multiline:true,maxRows:4,placeholder:\"Message #\".concat(selectedChannel),value:message,onChange:e=>setMessage(e.target.value),onKeyPress:handleKeyPress,sx:{flex:1,'& .MuiOutlinedInput-root':{backgroundColor:'transparent','& fieldset':{border:'none'}},'& .MuiInputBase-input':{color:'text.primary',fontSize:'0.875rem',lineHeight:1.4,'&::placeholder':{color:'text.secondary',opacity:0.8}}},variant:\"outlined\"}),/*#__PURE__*/_jsx(Tooltip,{title:\"Open Emoji Picker\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",sx:{color:'text.secondary','&:hover':{backgroundColor:'rgba(255, 255, 255, 0.05)',color:'text.primary'}},children:/*#__PURE__*/_jsx(EmojiIcon,{fontSize:\"small\"})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Search GIFs\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",sx:{color:'text.secondary','&:hover':{backgroundColor:'rgba(255, 255, 255, 0.05)',color:'text.primary'}},children:/*#__PURE__*/_jsx(GifIcon,{fontSize:\"small\"})})}),message.trim()?/*#__PURE__*/_jsx(Tooltip,{title:\"Send Message\",children:/*#__PURE__*/_jsx(IconButton,{onClick:handleSendMessage,sx:{backgroundColor:theme.palette.primary.main,color:'white','&:hover':{backgroundColor:theme.palette.primary.dark},width:36,height:36},children:/*#__PURE__*/_jsx(SendIcon,{fontSize:\"small\"})})}):/*#__PURE__*/_jsx(Tooltip,{title:\"Voice Message\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",sx:{color:'text.secondary','&:hover':{backgroundColor:'rgba(255, 255, 255, 0.05)',color:'text.primary'}},children:/*#__PURE__*/_jsx(MicIcon,{fontSize:\"small\"})})})]}),/*#__PURE__*/_jsxs(Box,{sx:{mt:1,display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(Box,{children:isTyping&&/*#__PURE__*/_jsx(Typography,{variant:\"caption\",sx:{color:'text.secondary'},children:\"Someone is typing...\"})}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',gap:1},children:/*#__PURE__*/_jsx(Typography,{variant:\"caption\",sx:{color:'text.secondary'},children:\"Press Enter to send, Shift+Enter for new line\"})})]})]});};export default BottomBar;","map":{"version":3,"names":["React","useState","Box","TextField","IconButton","Tooltip","Typography","useTheme","Add","AddIcon","EmojiEmotions","EmojiIcon","Gif","GifIcon","Mic","MicIcon","Send","SendIcon","jsx","_jsx","jsxs","_jsxs","BottomBar","_ref","selectedChannel","theme","message","setMessage","isTyping","setIsTyping","handleSendMessage","trim","console","log","handleKeyPress","e","key","shiftKey","preventDefault","sx","backgroundColor","borderTop","concat","palette","divider","p","children","display","alignItems","gap","borderRadius","title","size","color","fontSize","multiline","maxRows","placeholder","value","onChange","target","onKeyPress","flex","border","lineHeight","opacity","variant","onClick","primary","main","dark","width","height","mt","justifyContent"],"sources":["I:/VibeChat/EntireProjectNeedsTobeCompiled/frontend/src/components/discord/BottomBar.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  TextField,\r\n  IconButton,\r\n  Tooltip,\r\n  Typography,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  EmojiEmotions as EmojiIcon,\r\n  Gif as GifIcon,\r\n  Mic as MicIcon,\r\n  Send as SendIcon,\r\n} from '@mui/icons-material';\r\n\r\ninterface BottomBarProps {\r\n  selectedChannel: string;\r\n}\r\n\r\nconst BottomBar: React.FC<BottomBarProps> = ({ selectedChannel }) => {\r\n  const theme = useTheme();\r\n  const [message, setMessage] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n\r\n  const handleSendMessage = () => {\r\n    if (message.trim()) {\r\n      // In real app, this would send the message via WebSocket/API\r\n      console.log('Sending message:', message);\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.paper',\r\n        borderTop: `1px solid ${theme.palette.divider}`,\r\n        p: 2,\r\n      }}\r\n    >\r\n      {/* Input Area */}\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'flex-end',\r\n          gap: 1,\r\n          backgroundColor: 'background.default',\r\n          borderRadius: '8px',\r\n          p: 1,\r\n        }}\r\n      >\r\n        {/* Attachment Button */}\r\n        <Tooltip title=\"Add Attachment\">\r\n          <IconButton\r\n            size=\"small\"\r\n            sx={{\r\n              color: 'text.secondary',\r\n              '&:hover': {\r\n                backgroundColor: 'rgba(255, 255, 255, 0.05)',\r\n                color: 'text.primary',\r\n              },\r\n            }}\r\n          >\r\n            <AddIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n\r\n        {/* Message Input */}\r\n        <TextField\r\n          multiline\r\n          maxRows={4}\r\n          placeholder={`Message #${selectedChannel}`}\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          sx={{\r\n            flex: 1,\r\n            '& .MuiOutlinedInput-root': {\r\n              backgroundColor: 'transparent',\r\n              '& fieldset': {\r\n                border: 'none',\r\n              },\r\n            },\r\n            '& .MuiInputBase-input': {\r\n              color: 'text.primary',\r\n              fontSize: '0.875rem',\r\n              lineHeight: 1.4,\r\n              '&::placeholder': {\r\n                color: 'text.secondary',\r\n                opacity: 0.8,\r\n              },\r\n            },\r\n          }}\r\n          variant=\"outlined\"\r\n        />\r\n\r\n        {/* Emoji Button */}\r\n        <Tooltip title=\"Open Emoji Picker\">\r\n          <IconButton\r\n            size=\"small\"\r\n            sx={{\r\n              color: 'text.secondary',\r\n              '&:hover': {\r\n                backgroundColor: 'rgba(255, 255, 255, 0.05)',\r\n                color: 'text.primary',\r\n              },\r\n            }}\r\n          >\r\n            <EmojiIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n\r\n        {/* GIF Button */}\r\n        <Tooltip title=\"Search GIFs\">\r\n          <IconButton\r\n            size=\"small\"\r\n            sx={{\r\n              color: 'text.secondary',\r\n              '&:hover': {\r\n                backgroundColor: 'rgba(255, 255, 255, 0.05)',\r\n                color: 'text.primary',\r\n              },\r\n            }}\r\n          >\r\n            <GifIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n\r\n        {/* Voice Message or Send Button */}\r\n        {message.trim() ? (\r\n          <Tooltip title=\"Send Message\">\r\n            <IconButton\r\n              onClick={handleSendMessage}\r\n              sx={{\r\n                backgroundColor: theme.palette.primary.main,\r\n                color: 'white',\r\n                '&:hover': {\r\n                  backgroundColor: theme.palette.primary.dark,\r\n                },\r\n                width: 36,\r\n                height: 36,\r\n              }}\r\n            >\r\n              <SendIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title=\"Voice Message\">\r\n            <IconButton\r\n              size=\"small\"\r\n              sx={{\r\n                color: 'text.secondary',\r\n                '&:hover': {\r\n                  backgroundColor: 'rgba(255, 255, 255, 0.05)',\r\n                  color: 'text.primary',\r\n                },\r\n              }}\r\n            >\r\n              <MicIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </Box>\r\n\r\n      {/* Typing Indicator or Quick Actions */}\r\n      <Box sx={{ mt: 1, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Box>\r\n          {isTyping && (\r\n            <Typography variant=\"caption\" sx={{ color: 'text.secondary' }}>\r\n              Someone is typing...\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n\r\n        {/* Quick Actions */}\r\n        <Box sx={{ display: 'flex', gap: 1 }}>\r\n          <Typography variant=\"caption\" sx={{ color: 'text.secondary' }}>\r\n            Press Enter to send, Shift+Enter for new line\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BottomBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}